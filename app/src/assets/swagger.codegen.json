{
  "components": {
    "schemas": {
      "BadRequest": {
        "properties": {
          "error": {
            "description": "Код ошибки",
            "example": "AUTH_INVALID_EMAIL_ADDRESS",
            "type": "string"
          },
          "user_message": {
            "description": "Сообщение для пользователя",
            "example": "Переданный email адрес невалиден",
            "type": "string"
          }
        },
        "required": ["user_message", "error"],
        "type": "object"
      },
      "ChangePasswordRequest": {
        "properties": {
          "password": { "example": "newpassword123", "type": "string" },
          "token": { "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...", "type": "string" }
        },
        "required": ["token", "password"],
        "type": "object"
      },
      "ContentTitles": {
        "properties": {
          "title1": {
            "description": "Заголовок для кейса или истории успеха",
            "example": "Как я нашел ключ к string за 24 часа",
            "type": "string"
          },
          "title2": {
            "description": "Заголовок для прогнозов или трендов",
            "example": "3 тренда 2025 года, которые изменят ваш подход к string",
            "type": "string"
          },
          "title3": {
            "description": "Заголовок для советов или лайфхаков",
            "example": "Секрет, который я использую, чтобы string больше не мешал",
            "type": "string"
          },
          "title4": {
            "description": "Заголовок для мотивационного контента",
            "example": "Почему string — это не проблема, а возможность?",
            "type": "string"
          },
          "title5": {
            "description": "Заголовок для презентации уникальных методов",
            "example": "Мой метод, который превращает string в преимущество",
            "type": "string"
          },
          "title6": {
            "description": "Заголовок для разоблачений или экспертных мнений",
            "example": "Что скрывают эксперты о string? И как это использовать",
            "type": "string"
          },
          "week_id": { "description": "id недели", "example": 4, "type": "integer" }
        },
        "required": ["title1", "title2", "title3", "title4", "title5", "title6"],
        "type": "object"
      },
      "CreatePostImageRequest": {
        "properties": {
          "post": {
            "description": "Описание изображения",
            "example": "Красивый закат над горами",
            "type": "string"
          },
          "size": {
            "description": "Размер изображения",
            "example": "ASPECT_16_9",
            "type": "string"
          }
        },
        "required": ["post", "size"],
        "type": "object"
      },
      "CreatePostRequest": {
        "properties": {
          "additions": {
            "description": "Дополнительные примечания",
            "example": "Добавить статистику",
            "type": "string"
          },
          "length": { "description": "длина поста", "example": 150, "type": "integer" },
          "post_topic": {
            "description": "Тема поста",
            "example": "Продвижение бизнеса в Instagram",
            "type": "string"
          },
          "type": { "description": "Тип поста", "example": "Фоновый", "type": "string" }
        },
        "required": ["length", "post_topic"],
        "type": "object"
      },
      "CreatePromptImageRequest": {
        "properties": {
          "prompt": {
            "description": "Описание изображения",
            "example": "Красивый закат над горами",
            "type": "string"
          },
          "size": {
            "description": "Размер изображения",
            "example": "ASPECT_16_9",
            "type": "string"
          }
        },
        "required": ["prompt", "size"],
        "type": "object"
      },
      "GetPostByIdRequest": {
        "properties": {
          "post_id": { "description": "id поста", "example": "1", "type": "integer" }
        },
        "type": "object"
      },
      "GetProfileFromAnswersRequest": {
        "properties": {
          "post_sample": {
            "description": "Примеры постов",
            "example": [
              "Как увеличить продажи с помощью SMM?",
              "Лучшие стратегии для продвижения в Instagram",
              "Советы по созданию контента для соцсетей"
            ],
            "items": { "type": "string" },
            "type": "array"
          },
          "q1": {
            "description": "Ответ на вопрос 1",
            "example": "Эксперт в области маркетинга",
            "type": "string"
          },
          "q2": {
            "description": "Ответ на вопрос 2",
            "example": "Малый и средний бизнес",
            "type": "string"
          },
          "q3": {
            "description": "Ответ на вопрос 3",
            "example": "Нет клиентов, низкий охват, высокая конкуренция",
            "type": "string"
          },
          "q4": {
            "description": "Ответ на вопрос 4",
            "example": "Увеличение продаж на 20%",
            "type": "string"
          },
          "q5": {
            "description": "Ответ на вопрос 5",
            "example": "Маркетинг, SMM, Копирайтинг",
            "type": "string"
          },
          "q6": {
            "description": "Ответ на вопрос 6",
            "example": "Работал с крупными брендами",
            "type": "string"
          },
          "use_post_sample": {
            "description": "флаг того что пользователь для генерации бцдет использовать примеры своих постов",
            "type": "boolean"
          }
        },
        "required": ["q1", "q2", "q3", "q4", "q5", "q6"],
        "type": "object"
      },
      "GetProfileFromUrlRequest": {
        "properties": {
          "link": {
            "description": "Ссылка на профиль",
            "example": "https://example.com/profile",
            "type": "string"
          }
        },
        "required": ["link"],
        "type": "object"
      },
      "LoginRequest": {
        "properties": {
          "email": { "example": "user@example.com", "type": "string" },
          "password": { "example": "password123", "type": "string" }
        },
        "required": ["email", "password"],
        "type": "object"
      },
      "MarkPostReadyToPublish": {
        "properties": {
          "post_id": { "description": "id поста", "example": 123, "type": "integer" }
        },
        "type": "object"
      },
      "RegisterRequest": {
        "properties": {
          "email": { "example": "user@example.com", "type": "string" },
          "first_name": { "example": "Иван", "type": "string" },
          "last_name": { "example": "Иванов", "type": "string" },
          "password": { "example": "password123", "type": "string" },
          "verification_code": { "example": 123456, "format": "int64", "type": "integer" }
        },
        "required": ["first_name", "last_name", "email", "password", "verification_code"],
        "type": "object"
      },
      "SaveAccountRequest": {
        "properties": {
          "tg_channel_url": {
            "description": "URL телеграм-канала",
            "example": "https://t.me/example_channel",
            "type": "string"
          },
          "vk_channel_url": {
            "description": "URL VK-канала",
            "example": "https://vk.com/example_channel",
            "type": "string"
          },
          "vk_token": {
            "description": "Токен для доступа к API VK",
            "example": "vk1.a.exampleToken",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SavePostRequest": {
        "properties": {
          "image_urls": {
            "description": "массив ссылок на изображения",
            "example": [
              "https://images.s3.amazonaws.com/1-9d105248-e44a-47f7-bf91-5e082af2025c",
              "https://example.com/image2.jpg"
            ],
            "items": { "type": "string" },
            "type": "array"
          },
          "in_content_plan": {
            "description": "флаг того что пост создан в рамках контент плана или нет",
            "type": "boolean"
          },
          "post_topic": {
            "description": "название поста",
            "example": "**\"топ смешных гвоздей",
            "type": "string"
          },
          "text": {
            "description": "текст поста",
            "example": "**\"Почему ваш бизнес в Instagram не растет, а конкуренты уже на вершине?\"**  \n\nЗнакомо чувство, когда ...",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SendEmailCodeRequest": {
        "properties": { "email": { "example": "user@example.com", "type": "string" } },
        "required": ["email"],
        "type": "object"
      },
      "SendLinkRequest": {
        "properties": { "email": { "example": "user@example.com", "type": "string" } },
        "required": ["email"],
        "type": "object"
      },
      "UpdatePostRequest": {
        "properties": {
          "image_urls": {
            "description": "массив ссылок на изображения",
            "example": [
              "https://images.s3.amazonaws.com/1-9d105248-e44a-47f7-bf91-5e082af2025c",
              "https://example.com/image2.jpg"
            ],
            "items": { "type": "string" },
            "type": "array"
          },
          "post_id": { "description": "id поста", "example": 123, "type": "integer" },
          "post_topic": {
            "description": "название поста",
            "example": "**\"топ смешных гвоздей",
            "type": "string"
          },
          "text": {
            "description": "текст поста",
            "example": "**\"Почему ваш бизнес в Instagram не растет, а конкуренты уже на вершине?\"**  \n\nЗнакомо чувство, когда ...",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsePromoRequest": {
        "properties": { "promocode": { "example": "SUMMER2023", "type": "string" } },
        "required": ["promocode"],
        "type": "object"
      }
    }
  },
  "info": { "description": "API Puls", "title": "PulsBackend", "version": "1.0.0" },
  "openapi": "3.0.0",
  "paths": {
    "/auth/change_password": {
      "post": {
        "description": "Роут принимает токен и новый пароль, проверяет токен и изменяет пароль пользователя.\nЕсли токен невалиден или пароль не соответствует требованиям, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostAuthChangePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangePasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Пароль успешно изменен" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидный токен или пароль"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Изменение пароля пользователя",
        "tags": ["auth"]
      }
    },
    "/auth/get_user_id": {
      "get": {
        "description": "Роут принимает access_token и refresh_token в заголовках, проверяет их и возвращает user_id пользователя.\nЕсли токены невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetAuthGetUserId",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "user_id": {
                      "description": "Идентификатор пользователя",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Успешное получение user_id"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные токены"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение user_id по токенам",
        "tags": ["auth"]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Роут принимает email и пароль пользователя, проверяет их и возвращает токен для аутентификации.\nЕсли email или пароль неверны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostAuthLogin",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/LoginRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": { "description": "JWT токен для аутентификации", "type": "string" }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Успешный вход в систему"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Неверный email или пароль"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Вход в систему",
        "tags": ["auth"]
      }
    },
    "/auth/register": {
      "post": {
        "description": "Роут принимает данные для регистрации, проверяет код подтверждения и возвращает токен.\nЕсли данные невалидны или код подтверждения неверен, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostAuthRegister",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RegisterRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": { "description": "JWT токен для аутентификации", "type": "string" }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Успешная регистрация"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные или неверный код подтверждения"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Регистрация нового пользователя",
        "tags": ["auth"]
      }
    },
    "/auth/send_link": {
      "post": {
        "description": "Роут принимает email адрес и отправляет на него ссылку для восстановления пароля.\nЕсли email невалиден или пользователь с таким email не найден, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostAuthSendLink",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SendLinkRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Ссылка для восстановления пароля успешно отправлена" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидный email адрес или пользователь не найден"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Отправка ссылки для восстановления пароля",
        "tags": ["auth"]
      }
    },
    "/content/create_content_plan/": {
      "post": {
        "description": "Роут принимает ответы на вопросы и историю постов.\nНа основе этих данных генерируется контент план. Если данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentCreateContentPlan",
        "responses": {
          "200": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ContentTitles" } }
            },
            "description": "Невалидные данные"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Создание контент плана",
        "tags": ["content"]
      }
    },
    "/content/create_image_post/": {
      "post": {
        "description": "Роут принимает название поста и размер желаемого изображения. На основе этих данных генерируется изображение.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentCreateImagePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePostImageRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL сгенерированного изображения",
                      "example": "https://example.com/generated_image.png",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Изображение успешно создано"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Создание изображения на основе описания",
        "tags": ["content"]
      }
    },
    "/content/create_image_prompt/": {
      "post": {
        "description": "Роут принимает описание изображения (prompt) и его размер. На основе этих данных генерируется изображение.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentCreateImagePrompt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreatePromptImageRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL сгенерированного изображения",
                      "example": "https://example.com/generated_image.png",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Изображение успешно создано"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Создание изображения на основе описания",
        "tags": ["content"]
      }
    },
    "/content/create_post/": {
      "post": {
        "description": "Роут принимает ответы на вопросы, параметры длины, тему поста, дополнительные примечания и тип поста.\nНа основе этих данных генерируется текст поста. Если данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentCreatePost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/CreatePostRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "post_text": {
                      "description": "Текст сгенерированного поста",
                      "example": "Это пример сгенерированного поста.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Пост успешно создан"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Создание поста на основе ответов",
        "tags": ["content"]
      }
    },
    "/content/get_content_plans/": {
      "get": {
        "description": "Роут принимает id юзера и возвращает его контент планы.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetContentGetContentPlans",
        "responses": {
          "200": { "description": "получены посты пользователя" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение постов пользователя",
        "tags": ["content"]
      }
    },
    "/content/get_detail_content_plan/": {
      "get": {
        "description": "Роут принимает `user_id` и `week_id` в query-параметрах и возвращает контент-планы пользователя для указанной недели.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetContentGetDetailContentPlan",
        "parameters": [
          {
            "description": "ID недели",
            "in": "query",
            "name": "week_id",
            "required": true,
            "schema": { "format": "int64", "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Получены посты пользователя" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение постов пользователя",
        "tags": ["content"]
      }
    },
    "/content/get_post_by_id/": {
      "post": {
        "description": "Роут принимает id поста и возвращает информацию о нем\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentGetPostById",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetPostByIdRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SavePostRequest" } }
            },
            "description": "получены пост по id"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение информации о посте по id",
        "tags": ["content"]
      }
    },
    "/content/get_posts_not_in_content_plan/": {
      "get": {
        "description": "Роут принимает id юзера и возвращает его посты.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetContentGetPostsNotInContentPlan",
        "responses": {
          "200": { "description": "получены посты пользователя" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение постов пользователя",
        "tags": ["content"]
      }
    },
    "/content/mark_ready_to_publish/": {
      "post": {
        "description": "Роут принимает id поста и помечает его готовым \nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentMarkReadyToPublish",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MarkPostReadyToPublish" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "пост помечен готовым к публикаци" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Пометить пост готовым к публикации",
        "tags": ["content"]
      }
    },
    "/content/save_post/": {
      "post": {
        "description": "Роут принимает текст поста и ссылку на изображение.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostContentSavePost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SavePostRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "post_id": {
                      "description": "id сохраненного поста",
                      "example": 123,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "пост успешно сохранен"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Сохранение поста",
        "tags": ["content"]
      }
    },
    "/content/transcribe/": {
      "post": {
        "description": "Роут принимает аудиофайл и возвращает текст из него.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`\n",
        "operationId": "PostContentTranscribe",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "Аудиофайл для транскрибации. Должен быть отправлен как бинарный файл (например, MP3, WAV).",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": ["file"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "text": {
                      "description": "текст полученный из аудио",
                      "example": "фимозик",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "текст успешно получен"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "транскрибация и получение текста из аудиофайла",
        "tags": ["content"]
      }
    },
    "/content/update_post/": {
      "patch": {
        "description": "Роут принимает id, текст поста и ссылку на изображение.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PatchContentUpdatePost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UpdatePostRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "post_id": {
                      "description": "id сохраненного поста",
                      "example": 123,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "пост успешно сохранен"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "обновление",
        "tags": ["content"]
      }
    },
    "/customize/get_profile_from_url": {
      "post": {
        "description": "Роут принимает ссылку на профиль и возвращает данные профиля.\nЕсли ссылка невалидна или профиль не найден, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostCustomizeGetProfileFromUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetProfileFromUrlRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Данные о профиле успешно сохранены" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидная ссылка или профиль не найден"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получить профиль по ссылке",
        "tags": ["customize"]
      }
    },
    "/customize/get_user_answers": {
      "get": {
        "description": "Роут принимает access_token и refresh_token в заголовках, проверяет их и возвращает ответы пользователя на вопросы.\nЕсли токены невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetCustomizeGetUserAnswers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetProfileFromAnswersRequest" }
              }
            },
            "description": "Успешное получение ответов на вопросы"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные токены"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение ответов пользователя на вопросы",
        "tags": ["customize"]
      }
    },
    "/customize/save_account": {
      "post": {
        "description": "Роут принимает в теле запроса данные для сохранения аккаунта, включая URL телеграм-канала, URL VK-канала и токен VK.\nЕсли данные невалидны или отсутствуют обязательные поля, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostCustomizeSaveAccount",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/SaveAccountRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Данные аккаунта успешно сохранены" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные или отсутствие обязательных полей"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Сохранение данных аккаунта",
        "tags": ["customize"]
      }
    },
    "/customize/save_profile_answers": {
      "post": {
        "description": "Роут принимает ответы на вопросы и возвращает сгенерированный профиль.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostCustomizeSaveProfileAnswers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetProfileFromAnswersRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Данные о профиле успешно сохранены" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получить профиль на основе ответов",
        "tags": ["customize"]
      }
    },
    "/files/save_image/": {
      "post": {
        "description": "Роут принимает файл, загружает на s3 и возвращает ссылку.\nЕсли данные невалидны, возвращается ошибка `400 Bad Request`\n",
        "operationId": "PostFilesSaveImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "Файл для загрузки на s3",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": ["file"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "файл успешно загружен" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Загружает файл на s3",
        "tags": ["files"]
      }
    },
    "/payment/use_promo": {
      "post": {
        "description": "Роут принимает промокод в теле запроса и access_token, refresh_token в заголовках.\nЕсли промокод валиден, он применяется к текущему заказу пользователя.\nЕсли промокод невалиден или токены недействительны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostPaymentUsePromo",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UsePromoRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "discount": {
                      "description": "Размер скидки в процентах",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Промокод успешно применен"
          },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидный промокод или токены"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Использование промокода",
        "tags": ["payment"]
      }
    },
    "/posts/publish_post": {
      "post": {
        "description": "Роут принимает в теле запроса id поста и публикует его.\nЕсли ни один аккаунт не подключен, то возвращает ошибка.\n",
        "operationId": "PostPostsPublishPost",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/GetPostByIdRequest" } }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Пост успешно опубликован" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные данные или отсутствие обязательных полей"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Опубликовать пост в подключенные платформы",
        "tags": ["posts"]
      }
    },
    "/profile/get_all_user_info": {
      "get": {
        "description": "Роут принимает access_token и refresh_token в заголовках, проверяет их и возвращает всю информацию о пользователе.\nЕсли токены невалидны, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "GetProfileGetAllUserInfo",
        "responses": {
          "200": { "description": "Успешное получение информации о профиле" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидные токены"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Получение ответов пользователя на вопросы",
        "tags": ["profile"]
      }
    },
    "/send_email_code": {
      "post": {
        "description": "Роут принимает email адрес, валидирует его и отправляет код подтверждения.\nЕсли email невалиден, возвращается ошибка `400 Bad Request`.\n",
        "operationId": "PostSendEmailCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendEmailCodeRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "Код подтверждения успешно отправлен" },
          "400": {
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/BadRequest" } }
            },
            "description": "Невалидный email адрес"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": { "error": { "description": "Описание ошибки", "type": "string" } },
                  "type": "object"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Отправить код подтверждения на email",
        "tags": ["auth"]
      }
    }
  }
}
